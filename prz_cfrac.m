% FUNCTION NAME:
%   prz_cfrac
%
% DESCRIPTION:
%   Returns poles, residues and zeros of a continued fraction 
%       aa1 + (x-zz1)/aa2+... 
%
%
% INPUT:
%   aa - (vector double) inverse differences
%   zz - (vector double) associated locations used
%
%
% OUTPUT:
%   pol - poles
%   zer - zeros
%   res - residues
%
%
% ASSUMPTIONS AND LIMITATIONS:
%   aa and zz are generated by cfrac_interpolate
%
%
% REFERENCE:
%   Numerical Continued Fraction Interpolation
%   Oliver Salazar Celis
%   https://doi.org/10.48550/arXiv.2109.10529
%
%
% See also cfrac_interpolate, evalcfrac
function [pol,zer, res] = prz_cfrac(aa,zz)
    k   = max(find(~isnan(aa), 1, 'last' ));
    C   = -diag(ones(k-2,1),1);
    Dp  = diag(aa(2:k))-diag(zz(2:(k-1)),1)-diag(ones(k-2,1),-1);
    pol = eig(Dp,C); pol = pol(~isinf(pol)); %poles
    C   = -diag(ones(k-1,1),1);
    Dz  = diag(aa(1:k))-diag(zz(1:(k-1)),1)-diag(ones(k-1,1),-1);
    zer = eig(Dz,C); zer = zer(~isinf(zer)); %zeros
    res = nan(length(pol),1);
    dz = 1e-5*exp(2i*pi*(1:4)/4);
    pz = bsxfun(@plus,pol,dz);
    for k = 1:length(pol)
        res(k)=(evalcfrac(aa,zz, pz(k,:)')')*(dz')/4;
    end

end
